name: CI

on:
  push:
    branches: 
      - main
  pull_request:

env:
  go_version: 1.18.5

jobs:

  build:container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1

    - run: echo "IMAGE_TAG=dev" >> $GITHUB_ENV
      if: ${{ github.ref_name }} == 'main'
    - run: echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      if: startsWith(github.ref, 'refs/tags/v')

    - name: Login to ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push default image
      uses: docker/build-push-action@v3.2.0
      with:
        context: server
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}



  validate:
    runs-on: ubuntu-latest
    needs: build:container
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go_version }}

    - name: Start go-flare node
      run: .github/scripts/runner.sh
      shell: bash

    - name: Test node stability
      run: |
        curl http://localhost:9650/ext/health
      shell: bash

    - name: Start Rosetta Server
      run: .github/scripts/setup.sh
      shell: bash

    - name: Run rosetta-cli check:construction
      run: .github/scripts/cli.sh
      shell: bash

  make:build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - run: (cd server && make build)

  make:test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - run: (cd server && make test)